<?php declare(strict_types=1);

$finder = PhpCsFixer\Finder::create()
	->in('src');

$config = new PhpCsFixer\Config();
return $config
	->setIndent("\t")
	->setRules([
		'align_multiline_comment' => true,
		'assign_null_coalescing_to_coalesce_equal' => true,
		'blank_line_after_namespace' => true,
		'blank_line_before_statement' => [
			'statements' => [
				'phpdoc',
			],
		],
		'array_syntax' => ['syntax' => 'short'],
		'braces_position' => [
			'allow_single_line_anonymous_functions' => false,
			'allow_single_line_empty_anonymous_classes' => false,
			'anonymous_classes_opening_brace' => 'same_line',
			'anonymous_functions_opening_brace' => 'same_line',
			'functions_opening_brace' => 'same_line',
			'control_structures_opening_brace' => 'same_line',
			'classes_opening_brace' => 'same_line',
		],
		'cast_spaces' => ['space' => 'none'],
		'class_attributes_separation' => ['elements' => [
//			'const' => 'none',
			'method' => 'one',
//			'trait_import' => 'none',
			'case' => 'none',
//			'property' => 'one',
		]],
		'class_definition' => [
			'single_line' => false,
//			'single_line' => true,
			'space_before_parenthesis' => true,
//			'space_before_parenthesis' => false,
		],
		'class_reference_name_casing' => true,
		'clean_namespace' => true,
		'combine_consecutive_issets' => false,
		'combine_consecutive_unsets' => false,
		'combine_nested_dirname' => true,
		'compact_nullable_type_declaration' => true,
//		'concat_space' => ['spacing' => 'one'],
		'constant_case' => ['case' => 'lower'],
		'control_structure_continuation_position' => ['position' => 'same_line'],
		'declare_equal_normalize' => ['space' => 'none'],
		'declare_parentheses' => true,
		'declare_strict_types' => true,
		'dir_constant' => true,
		'elseif' => true,
		'empty_loop_condition' => ['style' => 'while'],
		'encoding' => true,
		'string_implicit_backslashes' => false,
		'explicit_indirect_variable' => true,
		'explicit_string_variable' => true,
		'full_opening_tag' => true,
//		'fully_qualified_strict_types' => true,
		'function_declaration' => [
//			'closure_function_spacing' => 'none',
			'closure_function_spacing' => 'one',
			'trailing_comma_single_line' => false,
		],
		'type_declaration_spaces' => ['elements' => ['function']],
		'group_import' => true,
		'include' => true,
		'integer_literal_case' => true,
		'lambda_not_used_import' => true,
		'line_ending' => true,
		'list_syntax' => ['syntax' => 'short'],
		'lowercase_static_reference' => true,
		'lowercase_keywords' => true,
		'lowercase_cast' => true,
		'magic_constant_casing' => true,
		'magic_method_casing' => true,
		'method_argument_space' => true,
//		'method_chaining_indentation' => true,
		'multiline_comment_opening_closing' => true,
		'multiline_whitespace_before_semicolons' => true,
		'native_function_casing' => true,
		'native_type_declaration_casing' => true,
		'new_with_parentheses' => true,
		'no_alternative_syntax' => true,
		'no_blank_lines_after_class_opening' => true,
		'no_empty_comment' => true,
		'no_empty_phpdoc' => true,
		'no_empty_statement' => true,
		'no_leading_import_slash' => true,
//		'no_multiline_whitespace_around_double_arrow' => true,
		'no_leading_namespace_whitespace' => true,
		'no_short_bool_cast' => true,
		'no_singleline_whitespace_before_semicolons' => true,
		'no_space_around_double_colon' => true,
		'no_spaces_after_function_name' => true,
		'no_spaces_around_offset' => ['positions' => ['array' => 'inside']],
		'spaces_inside_parentheses' => ['space' => 'none'],
//		'no_superfluous_elseif' => true,
		'no_superfluous_phpdoc_tags' => true,
		'no_trailing_comma_in_singleline' => true,
		'no_trailing_whitespace' => true,
		'no_trailing_whitespace_in_comment' => true,
		'no_unneeded_control_parentheses' => [
			'statements' => [
				'break',
				'clone',
				'continue',
				'return',
				'switch_case',
				'yield',
			],
		],
		'no_unneeded_braces' => ['namespaces' => true],
		'no_unneeded_import_alias' => true,
		'no_unreachable_default_argument_value' => true,
		'no_unset_cast' => true,
		'no_unused_imports' => true,
		'no_useless_else' => true,
		'no_whitespace_before_comma_in_array' => true,
		'no_whitespace_in_blank_line' => true,
		'normalize_index_brace' => true,
		'nullable_type_declaration_for_default_null_value' => true,
		'object_operator_without_whitespace' => true,
//		'operator_linebreak' => true,
		'ordered_class_elements' => [
			'order' => [
				'use_trait',
				'constant_public',
				'constant_protected',
				'constant_private',
				'property_public',
				'property_protected',
				'property_private',
				'construct',
				'destruct',
				'magic',
				'method_public',
				'method_protected',
				'method_private',
			],
		],
		'ordered_imports' =>  [
			'imports_order' => ['const', 'function', 'class'],
			'sort_algorithm' => 'alpha',
		],
		'phpdoc_align' => true,
		'phpdoc_indent' => true,
		'phpdoc_inline_tag_normalizer' => true,
		'phpdoc_line_span' => [
			'const' => 'single',
			'method' => 'single',
			'property' => 'single',
		],
		'phpdoc_no_empty_return' => true,
		'phpdoc_scalar' => true,
		'phpdoc_separation' => true,
		'phpdoc_single_line_var_spacing' => true,
		'phpdoc_tag_casing' => true,
		'phpdoc_trim' => true,
		'phpdoc_trim_consecutive_blank_line_separation' => true,
		'phpdoc_types' => true,
		'phpdoc_var_annotation_correct_order' => true,
		'phpdoc_var_without_name' => true,
		'return_type_declaration' => ['space_before' => 'none'],
		'short_scalar_cast' => true,
		'simple_to_complex_string_variable' => true,
		'simplified_null_return' => true,
		'single_blank_line_at_eof' => true,
		'blank_lines_before_namespace' => ['max_line_breaks' => 2, 'min_line_breaks' => 2],
		'single_class_element_per_statement' => true,
//		'single_import_per_statement' => true,
		'single_line_after_imports' => true,
		'single_line_comment_spacing' => true,
//		'single_quote' => true,
		'single_space_around_construct' => [
			'constructs_followed_by_a_single_space' => [
				'abstract',
				'as',
				'attribute',
				'break',
				'case',
				'catch',
				'class',
				'clone',
				'comment',
				'const',
				'const_import',
				'continue',
				'do',
				'else',
				'elseif',
				'enum',
				'extends',
				'final',
				'finally',
				'for',
				'foreach',
				'function',
				'function_import',
				'global',
				'goto',
				'if',
				'implements',
				'include',
				'include_once',
				'instanceof',
				'insteadof',
				'interface',
				'match',
				'named_argument',
				'namespace',
				'new',
				'open_tag_with_echo',
				'php_doc',
				'php_open',
				'private',
				'protected',
				'public',
				'readonly',
				'require',
				'require_once',
				'return',
				'static',
				'switch',
				'throw',
				'trait',
				'try',
				'use',
				'use_lambda',
				'use_trait',
				'var',
				'while',
				'yield',
				'yield_from',

			],
		],
		'standardize_not_equals' => true,
		'switch_case_semicolon_to_colon' => true,
		'switch_case_space' => true,
		'switch_continue_to_break' => true,
		'ternary_operator_spaces' => true,
		'ternary_to_null_coalescing' => true,
		'trailing_comma_in_multiline' => true,
		'trim_array_spaces' => true,
		'types_spaces' => [
			'space' => 'none',
			'space_multiple_catch' => 'single',
		],
		'unary_operator_spaces' => true,
		'visibility_required' => true,
		'whitespace_after_comma_in_array' => true,
	])
	->setRiskyAllowed(true)
	->setFinder($finder);
