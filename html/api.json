/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Nadybot\Core\Annotations\ApiResult#243 (4) {
  public int $code =>
  int(200)
  public string $class =>
  string(14) "ConfigModule[]"
  public string $desc =>
  string(30) "A list of modules to configure"
  public $value =>
  NULL
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Addendum\ReflectionAnnotatedMethod#234 (3) {
  private $annotations =>
  class Addendum\AnnotationsCollection#208 (1) {
    private $annotations =>
    array(4) {
      'Nadybot\Core\Annotations\Api' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\Api#170 (1) {
          public $value =>
          string(7) "/module"
        }
      }
      'Nadybot\Core\Annotations\GET' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\GET#351 (1) {
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\AccessLevel' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\AccessLevel#250 (1) {
          public $value =>
          string(3) "mod"
        }
      }
      'Nadybot\Core\Annotations\ApiResult' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\ApiResult#243 (4) {
          public int $code =>
          int(200)
          public string $class =>
          string(14) "ConfigModule[]"
          public string $desc =>
          string(30) "A list of modules to configure"
          public $value =>
          NULL
        }
      }
    }
  }
  public $name =>
  string(17) "moduleGetEndpoint"
  public $class =>
  string(46) "Nadybot\Core\Modules\CONFIG\ConfigApiConroller"
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Nadybot\Core\Annotations\ApiResult#420 (4) {
  public int $code =>
  int(200)
  public string $class =>
  string(13) "ModuleCommand"
  public string $desc =>
  string(30) "operation applied successfully"
  public $value =>
  NULL
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Addendum\ReflectionAnnotatedMethod#239 (3) {
  private $annotations =>
  class Addendum\AnnotationsCollection#58 (1) {
    private $annotations =>
    array(5) {
      'Nadybot\Core\Annotations\Api' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\Api#352 (1) {
          public $value =>
          string(25) "/module/%s/commands/%s/%s"
        }
      }
      'Nadybot\Core\Annotations\PATCH' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\PATCH#347 (1) {
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\AccessLevel' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\AccessLevel#291 (1) {
          public $value =>
          string(3) "mod"
        }
      }
      'Nadybot\Core\Annotations\RequestBody' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\RequestBody#285 (4) {
          public string $class =>
          string(23) "ModuleSubcommandChannel"
          public string $desc =>
          string(20) "Parameters to change"
          public bool $required =>
          bool(true)
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\ApiResult' =>
      array(2) {
        [0] =>
        class Nadybot\Core\Annotations\ApiResult#420 (4) {
          public int $code =>
          int(200)
          public string $class =>
          string(13) "ModuleCommand"
          public string $desc =>
          string(30) "operation applied successfully"
          public $value =>
          NULL
        }
        [1] =>
        class Nadybot\Core\Annotations\ApiResult#320 (4) {
          public int $code =>
          int(402)
          public string $class =>
          *uninitialized*
          public string $desc =>
          string(27) "Wrong or no operation given"
          public $value =>
          NULL
        }
      }
    }
  }
  public $name =>
  string(36) "toggleCommandChannelSettingsEndpoint"
  public $class =>
  string(46) "Nadybot\Core\Modules\CONFIG\ConfigApiConroller"
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Nadybot\Core\Annotations\ApiResult#320 (4) {
  public int $code =>
  int(402)
  public string $class =>
  *uninitialized*
  public string $desc =>
  string(27) "Wrong or no operation given"
  public $value =>
  NULL
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Addendum\ReflectionAnnotatedMethod#239 (3) {
  private $annotations =>
  class Addendum\AnnotationsCollection#58 (1) {
    private $annotations =>
    array(5) {
      'Nadybot\Core\Annotations\Api' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\Api#352 (1) {
          public $value =>
          string(25) "/module/%s/commands/%s/%s"
        }
      }
      'Nadybot\Core\Annotations\PATCH' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\PATCH#347 (1) {
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\AccessLevel' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\AccessLevel#291 (1) {
          public $value =>
          string(3) "mod"
        }
      }
      'Nadybot\Core\Annotations\RequestBody' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\RequestBody#285 (4) {
          public string $class =>
          string(23) "ModuleSubcommandChannel"
          public string $desc =>
          string(20) "Parameters to change"
          public bool $required =>
          bool(true)
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\ApiResult' =>
      array(2) {
        [0] =>
        class Nadybot\Core\Annotations\ApiResult#420 (4) {
          public int $code =>
          int(200)
          public string $class =>
          string(13) "ModuleCommand"
          public string $desc =>
          string(30) "operation applied successfully"
          public $value =>
          NULL
        }
        [1] =>
        class Nadybot\Core\Annotations\ApiResult#320 (4) {
          public int $code =>
          int(402)
          public string $class =>
          *uninitialized*
          public string $desc =>
          string(27) "Wrong or no operation given"
          public $value =>
          NULL
        }
      }
    }
  }
  public $name =>
  string(36) "toggleCommandChannelSettingsEndpoint"
  public $class =>
  string(46) "Nadybot\Core\Modules\CONFIG\ConfigApiConroller"
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Nadybot\Core\Annotations\ApiResult#18 (4) {
  public int $code =>
  int(200)
  public string $class =>
  *uninitialized*
  public string $desc =>
  string(30) "operation applied successfully"
  public $value =>
  NULL
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Addendum\ReflectionAnnotatedMethod#67 (3) {
  private $annotations =>
  class Addendum\AnnotationsCollection#418 (1) {
    private $annotations =>
    array(6) {
      'Nadybot\Core\Annotations\Api' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\Api#200 (1) {
          public $value =>
          string(22) "/module/%s/commands/%s"
        }
      }
      'Nadybot\Core\Annotations\PATCH' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\PATCH#164 (1) {
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\PUT' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\PUT#152 (1) {
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\AccessLevel' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\AccessLevel#345 (1) {
          public $value =>
          string(3) "mod"
        }
      }
      'Nadybot\Core\Annotations\RequestBody' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\RequestBody#27 (4) {
          public string $class =>
          string(9) "Operation"
          public string $desc =>
          string(28) "Either "enable" or "disable""
          public bool $required =>
          bool(true)
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\ApiResult' =>
      array(2) {
        [0] =>
        class Nadybot\Core\Annotations\ApiResult#18 (4) {
          public int $code =>
          int(200)
          public string $class =>
          *uninitialized*
          public string $desc =>
          string(30) "operation applied successfully"
          public $value =>
          NULL
        }
        [1] =>
        class Nadybot\Core\Annotations\ApiResult#263 (4) {
          public int $code =>
          int(402)
          public string $class =>
          *uninitialized*
          public string $desc =>
          string(27) "Wrong or no operation given"
          public $value =>
          NULL
        }
      }
    }
  }
  public $name =>
  string(27) "toggleCommandStatusEndpoint"
  public $class =>
  string(46) "Nadybot\Core\Modules\CONFIG\ConfigApiConroller"
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Nadybot\Core\Annotations\ApiResult#263 (4) {
  public int $code =>
  int(402)
  public string $class =>
  *uninitialized*
  public string $desc =>
  string(27) "Wrong or no operation given"
  public $value =>
  NULL
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Addendum\ReflectionAnnotatedMethod#67 (3) {
  private $annotations =>
  class Addendum\AnnotationsCollection#418 (1) {
    private $annotations =>
    array(6) {
      'Nadybot\Core\Annotations\Api' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\Api#200 (1) {
          public $value =>
          string(22) "/module/%s/commands/%s"
        }
      }
      'Nadybot\Core\Annotations\PATCH' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\PATCH#164 (1) {
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\PUT' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\PUT#152 (1) {
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\AccessLevel' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\AccessLevel#345 (1) {
          public $value =>
          string(3) "mod"
        }
      }
      'Nadybot\Core\Annotations\RequestBody' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\RequestBody#27 (4) {
          public string $class =>
          string(9) "Operation"
          public string $desc =>
          string(28) "Either "enable" or "disable""
          public bool $required =>
          bool(true)
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\ApiResult' =>
      array(2) {
        [0] =>
        class Nadybot\Core\Annotations\ApiResult#18 (4) {
          public int $code =>
          int(200)
          public string $class =>
          *uninitialized*
          public string $desc =>
          string(30) "operation applied successfully"
          public $value =>
          NULL
        }
        [1] =>
        class Nadybot\Core\Annotations\ApiResult#263 (4) {
          public int $code =>
          int(402)
          public string $class =>
          *uninitialized*
          public string $desc =>
          string(27) "Wrong or no operation given"
          public $value =>
          NULL
        }
      }
    }
  }
  public $name =>
  string(27) "toggleCommandStatusEndpoint"
  public $class =>
  string(46) "Nadybot\Core\Modules\CONFIG\ConfigApiConroller"
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Nadybot\Core\Annotations\ApiResult#111 (4) {
  public int $code =>
  int(200)
  public string $class =>
  *uninitialized*
  public string $desc =>
  string(30) "operation applied successfully"
  public $value =>
  NULL
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Addendum\ReflectionAnnotatedMethod#42 (3) {
  private $annotations =>
  class Addendum\AnnotationsCollection#223 (1) {
    private $annotations =>
    array(7) {
      'Nadybot\Core\Annotations\Api' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\Api#307 (1) {
          public $value =>
          string(10) "/module/%s"
        }
      }
      'Nadybot\Core\Annotations\PATCH' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\PATCH#244 (1) {
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\PUT' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\PUT#400 (1) {
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\AccessLevel' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\AccessLevel#301 (1) {
          public $value =>
          string(3) "mod"
        }
      }
      'Nadybot\Core\Annotations\RequestBody' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\RequestBody#299 (4) {
          public string $class =>
          string(9) "Operation"
          public string $desc =>
          string(28) "Either "enable" or "disable""
          public bool $required =>
          bool(true)
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\QueryParam' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\QueryParam#355 (6) {
          public string $name =>
          string(7) "channel"
          public bool $required =>
          bool(false)
          public string $in =>
          string(5) "query"
          public string $desc =>
          string(38) "Either "msg", "priv", "guild" or "all""
          public string $type =>
          string(6) "string"
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\ApiResult' =>
      array(2) {
        [0] =>
        class Nadybot\Core\Annotations\ApiResult#111 (4) {
          public int $code =>
          int(200)
          public string $class =>
          *uninitialized*
          public string $desc =>
          string(30) "operation applied successfully"
          public $value =>
          NULL
        }
        [1] =>
        class Nadybot\Core\Annotations\ApiResult#17 (4) {
          public int $code =>
          int(402)
          public string $class =>
          *uninitialized*
          public string $desc =>
          string(27) "Wrong or no operation given"
          public $value =>
          NULL
        }
      }
    }
  }
  public $name =>
  string(26) "toggleModuleStatusEndpoint"
  public $class =>
  string(46) "Nadybot\Core\Modules\CONFIG\ConfigApiConroller"
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Nadybot\Core\Annotations\ApiResult#17 (4) {
  public int $code =>
  int(402)
  public string $class =>
  *uninitialized*
  public string $desc =>
  string(27) "Wrong or no operation given"
  public $value =>
  NULL
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Addendum\ReflectionAnnotatedMethod#42 (3) {
  private $annotations =>
  class Addendum\AnnotationsCollection#223 (1) {
    private $annotations =>
    array(7) {
      'Nadybot\Core\Annotations\Api' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\Api#307 (1) {
          public $value =>
          string(10) "/module/%s"
        }
      }
      'Nadybot\Core\Annotations\PATCH' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\PATCH#244 (1) {
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\PUT' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\PUT#400 (1) {
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\AccessLevel' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\AccessLevel#301 (1) {
          public $value =>
          string(3) "mod"
        }
      }
      'Nadybot\Core\Annotations\RequestBody' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\RequestBody#299 (4) {
          public string $class =>
          string(9) "Operation"
          public string $desc =>
          string(28) "Either "enable" or "disable""
          public bool $required =>
          bool(true)
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\QueryParam' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\QueryParam#355 (6) {
          public string $name =>
          string(7) "channel"
          public bool $required =>
          bool(false)
          public string $in =>
          string(5) "query"
          public string $desc =>
          string(38) "Either "msg", "priv", "guild" or "all""
          public string $type =>
          string(6) "string"
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\ApiResult' =>
      array(2) {
        [0] =>
        class Nadybot\Core\Annotations\ApiResult#111 (4) {
          public int $code =>
          int(200)
          public string $class =>
          *uninitialized*
          public string $desc =>
          string(30) "operation applied successfully"
          public $value =>
          NULL
        }
        [1] =>
        class Nadybot\Core\Annotations\ApiResult#17 (4) {
          public int $code =>
          int(402)
          public string $class =>
          *uninitialized*
          public string $desc =>
          string(27) "Wrong or no operation given"
          public $value =>
          NULL
        }
      }
    }
  }
  public $name =>
  string(26) "toggleModuleStatusEndpoint"
  public $class =>
  string(46) "Nadybot\Core\Modules\CONFIG\ConfigApiConroller"
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Nadybot\Core\Annotations\ApiResult#187 (4) {
  public int $code =>
  int(200)
  public string $class =>
  string(15) "ModuleSetting[]"
  public string $desc =>
  string(38) "A list of all settings for this module"
  public $value =>
  NULL
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Addendum\ReflectionAnnotatedMethod#413 (3) {
  private $annotations =>
  class Addendum\AnnotationsCollection#75 (1) {
    private $annotations =>
    array(4) {
      'Nadybot\Core\Annotations\Api' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\Api#151 (1) {
          public $value =>
          string(19) "/module/%s/settings"
        }
      }
      'Nadybot\Core\Annotations\GET' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\GET#74 (1) {
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\AccessLevel' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\AccessLevel#174 (1) {
          public $value =>
          string(3) "mod"
        }
      }
      'Nadybot\Core\Annotations\ApiResult' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\ApiResult#187 (4) {
          public int $code =>
          int(200)
          public string $class =>
          string(15) "ModuleSetting[]"
          public string $desc =>
          string(38) "A list of all settings for this module"
          public $value =>
          NULL
        }
      }
    }
  }
  public $name =>
  string(28) "apiConfigSettingsGetEndpoint"
  public $class =>
  string(46) "Nadybot\Core\Modules\CONFIG\ConfigApiConroller"
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Nadybot\Core\Annotations\ApiResult#333 (4) {
  public int $code =>
  int(200)
  public string $class =>
  string(19) "ModuleEventConfig[]"
  public string $desc =>
  string(53) "A list of all events and their status for this module"
  public $value =>
  NULL
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Addendum\ReflectionAnnotatedMethod#342 (3) {
  private $annotations =>
  class Addendum\AnnotationsCollection#209 (1) {
    private $annotations =>
    array(4) {
      'Nadybot\Core\Annotations\Api' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\Api#227 (1) {
          public $value =>
          string(17) "/module/%s/events"
        }
      }
      'Nadybot\Core\Annotations\GET' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\GET#145 (1) {
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\AccessLevel' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\AccessLevel#12 (1) {
          public $value =>
          string(3) "mod"
        }
      }
      'Nadybot\Core\Annotations\ApiResult' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\ApiResult#333 (4) {
          public int $code =>
          int(200)
          public string $class =>
          string(19) "ModuleEventConfig[]"
          public string $desc =>
          string(53) "A list of all events and their status for this module"
          public $value =>
          NULL
        }
      }
    }
  }
  public $name =>
  string(26) "apiConfigEventsGetEndpoint"
  public $class =>
  string(46) "Nadybot\Core\Modules\CONFIG\ConfigApiConroller"
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Nadybot\Core\Annotations\ApiResult#399 (4) {
  public int $code =>
  int(200)
  public string $class =>
  string(15) "ModuleCommand[]"
  public string $desc =>
  string(67) "A list of all command and possible subcommands this module provides"
  public $value =>
  NULL
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Addendum\ReflectionAnnotatedMethod#47 (3) {
  private $annotations =>
  class Addendum\AnnotationsCollection#357 (1) {
    private $annotations =>
    array(4) {
      'Nadybot\Core\Annotations\Api' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\Api#72 (1) {
          public $value =>
          string(19) "/module/%s/commands"
        }
      }
      'Nadybot\Core\Annotations\GET' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\GET#296 (1) {
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\AccessLevel' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\AccessLevel#391 (1) {
          public $value =>
          string(3) "mod"
        }
      }
      'Nadybot\Core\Annotations\ApiResult' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\ApiResult#399 (4) {
          public int $code =>
          int(200)
          public string $class =>
          string(15) "ModuleCommand[]"
          public string $desc =>
          string(67) "A list of all command and possible subcommands this module provides"
          public $value =>
          NULL
        }
      }
    }
  }
  public $name =>
  string(28) "apiConfigCommandsGetEndpoint"
  public $class =>
  string(46) "Nadybot\Core\Modules\CONFIG\ConfigApiConroller"
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Nadybot\Core\Annotations\ApiResult#144 (4) {
  public int $code =>
  int(200)
  public string $class =>
  string(19) "ModuleAccessLevel[]"
  public string $desc =>
  string(27) "A list of all access levels"
  public $value =>
  NULL
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Addendum\ReflectionAnnotatedMethod#130 (3) {
  private $annotations =>
  class Addendum\AnnotationsCollection#331 (1) {
    private $annotations =>
    array(4) {
      'Nadybot\Core\Annotations\Api' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\Api#133 (1) {
          public $value =>
          string(14) "/access_levels"
        }
      }
      'Nadybot\Core\Annotations\GET' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\GET#281 (1) {
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\AccessLevel' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\AccessLevel#167 (1) {
          public $value =>
          string(3) "all"
        }
      }
      'Nadybot\Core\Annotations\ApiResult' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\ApiResult#144 (4) {
          public int $code =>
          int(200)
          public string $class =>
          string(19) "ModuleAccessLevel[]"
          public string $desc =>
          string(27) "A list of all access levels"
          public $value =>
          NULL
        }
      }
    }
  }
  public $name =>
  string(32) "apiConfigAccessLevelsGetEndpoint"
  public $class =>
  string(46) "Nadybot\Core\Modules\CONFIG\ConfigApiConroller"
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Nadybot\Core\Annotations\ApiResult#46 (4) {
  public int $code =>
  int(200)
  public string $class =>
  string(6) "string"
  public string $desc =>
  string(16) "The stored value"
  public $value =>
  NULL
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Addendum\ReflectionAnnotatedMethod#288 (3) {
  private $annotations =>
  class Addendum\AnnotationsCollection#43 (1) {
    private $annotations =>
    array(4) {
      'Nadybot\Core\Annotations\Api' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\Api#397 (1) {
          public $value =>
          string(11) "/setting/%s"
        }
      }
      'Nadybot\Core\Annotations\GET' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\GET#20 (1) {
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\AccessLevel' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\AccessLevel#14 (1) {
          public $value =>
          string(3) "all"
        }
      }
      'Nadybot\Core\Annotations\ApiResult' =>
      array(2) {
        [0] =>
        class Nadybot\Core\Annotations\ApiResult#46 (4) {
          public int $code =>
          int(200)
          public string $class =>
          string(6) "string"
          public string $desc =>
          string(16) "The stored value"
          public $value =>
          NULL
        }
        [1] =>
        class Nadybot\Core\Annotations\ApiResult#334 (4) {
          public int $code =>
          int(204)
          public string $class =>
          *uninitialized*
          public string $desc =>
          string(15) "No value stored"
          public $value =>
          NULL
        }
      }
    }
  }
  public $name =>
  string(21) "apiSettingGetEndpoint"
  public $class =>
  string(44) "Nadybot\Core\Modules\PREFERENCES\Preferences"
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Nadybot\Core\Annotations\ApiResult#334 (4) {
  public int $code =>
  int(204)
  public string $class =>
  *uninitialized*
  public string $desc =>
  string(15) "No value stored"
  public $value =>
  NULL
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Addendum\ReflectionAnnotatedMethod#288 (3) {
  private $annotations =>
  class Addendum\AnnotationsCollection#43 (1) {
    private $annotations =>
    array(4) {
      'Nadybot\Core\Annotations\Api' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\Api#397 (1) {
          public $value =>
          string(11) "/setting/%s"
        }
      }
      'Nadybot\Core\Annotations\GET' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\GET#20 (1) {
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\AccessLevel' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\AccessLevel#14 (1) {
          public $value =>
          string(3) "all"
        }
      }
      'Nadybot\Core\Annotations\ApiResult' =>
      array(2) {
        [0] =>
        class Nadybot\Core\Annotations\ApiResult#46 (4) {
          public int $code =>
          int(200)
          public string $class =>
          string(6) "string"
          public string $desc =>
          string(16) "The stored value"
          public $value =>
          NULL
        }
        [1] =>
        class Nadybot\Core\Annotations\ApiResult#334 (4) {
          public int $code =>
          int(204)
          public string $class =>
          *uninitialized*
          public string $desc =>
          string(15) "No value stored"
          public $value =>
          NULL
        }
      }
    }
  }
  public $name =>
  string(21) "apiSettingGetEndpoint"
  public $class =>
  string(44) "Nadybot\Core\Modules\PREFERENCES\Preferences"
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Nadybot\Core\Annotations\ApiResult#363 (4) {
  public int $code =>
  int(201)
  public string $class =>
  *uninitialized*
  public string $desc =>
  string(39) "The new setting was stored successfully"
  public $value =>
  NULL
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Addendum\ReflectionAnnotatedMethod#366 (3) {
  private $annotations =>
  class Addendum\AnnotationsCollection#246 (1) {
    private $annotations =>
    array(5) {
      'Nadybot\Core\Annotations\Api' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\Api#383 (1) {
          public $value =>
          string(11) "/setting/%s"
        }
      }
      'Nadybot\Core\Annotations\POST' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\POST#100 (1) {
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\AccessLevel' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\AccessLevel#409 (1) {
          public $value =>
          string(3) "all"
        }
      }
      'Nadybot\Core\Annotations\ApiResult' =>
      array(3) {
        [0] =>
        class Nadybot\Core\Annotations\ApiResult#363 (4) {
          public int $code =>
          int(201)
          public string $class =>
          *uninitialized*
          public string $desc =>
          string(39) "The new setting was stored successfully"
          public $value =>
          NULL
        }
        [1] =>
        class Nadybot\Core\Annotations\ApiResult#305 (4) {
          public int $code =>
          int(409)
          public string $class =>
          *uninitialized*
          public string $desc =>
          string(33) "There is already a setting stored"
          public $value =>
          NULL
        }
        [2] =>
        class Nadybot\Core\Annotations\ApiResult#4 (4) {
          public int $code =>
          int(415)
          public string $class =>
          *uninitialized*
          public string $desc =>
          string(48) "You tried to pass more than just a simple string"
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\RequestBody' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\RequestBody#388 (4) {
          public string $class =>
          string(6) "string"
          public string $desc =>
          string(26) "The data you want to store"
          public bool $required =>
          bool(true)
          public $value =>
          NULL
        }
      }
    }
  }
  public $name =>
  string(22) "apiSettingPostEndpoint"
  public $class =>
  string(44) "Nadybot\Core\Modules\PREFERENCES\Preferences"
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Nadybot\Core\Annotations\ApiResult#305 (4) {
  public int $code =>
  int(409)
  public string $class =>
  *uninitialized*
  public string $desc =>
  string(33) "There is already a setting stored"
  public $value =>
  NULL
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Addendum\ReflectionAnnotatedMethod#366 (3) {
  private $annotations =>
  class Addendum\AnnotationsCollection#246 (1) {
    private $annotations =>
    array(5) {
      'Nadybot\Core\Annotations\Api' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\Api#383 (1) {
          public $value =>
          string(11) "/setting/%s"
        }
      }
      'Nadybot\Core\Annotations\POST' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\POST#100 (1) {
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\AccessLevel' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\AccessLevel#409 (1) {
          public $value =>
          string(3) "all"
        }
      }
      'Nadybot\Core\Annotations\ApiResult' =>
      array(3) {
        [0] =>
        class Nadybot\Core\Annotations\ApiResult#363 (4) {
          public int $code =>
          int(201)
          public string $class =>
          *uninitialized*
          public string $desc =>
          string(39) "The new setting was stored successfully"
          public $value =>
          NULL
        }
        [1] =>
        class Nadybot\Core\Annotations\ApiResult#305 (4) {
          public int $code =>
          int(409)
          public string $class =>
          *uninitialized*
          public string $desc =>
          string(33) "There is already a setting stored"
          public $value =>
          NULL
        }
        [2] =>
        class Nadybot\Core\Annotations\ApiResult#4 (4) {
          public int $code =>
          int(415)
          public string $class =>
          *uninitialized*
          public string $desc =>
          string(48) "You tried to pass more than just a simple string"
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\RequestBody' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\RequestBody#388 (4) {
          public string $class =>
          string(6) "string"
          public string $desc =>
          string(26) "The data you want to store"
          public bool $required =>
          bool(true)
          public $value =>
          NULL
        }
      }
    }
  }
  public $name =>
  string(22) "apiSettingPostEndpoint"
  public $class =>
  string(44) "Nadybot\Core\Modules\PREFERENCES\Preferences"
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Nadybot\Core\Annotations\ApiResult#4 (4) {
  public int $code =>
  int(415)
  public string $class =>
  *uninitialized*
  public string $desc =>
  string(48) "You tried to pass more than just a simple string"
  public $value =>
  NULL
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Addendum\ReflectionAnnotatedMethod#366 (3) {
  private $annotations =>
  class Addendum\AnnotationsCollection#246 (1) {
    private $annotations =>
    array(5) {
      'Nadybot\Core\Annotations\Api' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\Api#383 (1) {
          public $value =>
          string(11) "/setting/%s"
        }
      }
      'Nadybot\Core\Annotations\POST' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\POST#100 (1) {
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\AccessLevel' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\AccessLevel#409 (1) {
          public $value =>
          string(3) "all"
        }
      }
      'Nadybot\Core\Annotations\ApiResult' =>
      array(3) {
        [0] =>
        class Nadybot\Core\Annotations\ApiResult#363 (4) {
          public int $code =>
          int(201)
          public string $class =>
          *uninitialized*
          public string $desc =>
          string(39) "The new setting was stored successfully"
          public $value =>
          NULL
        }
        [1] =>
        class Nadybot\Core\Annotations\ApiResult#305 (4) {
          public int $code =>
          int(409)
          public string $class =>
          *uninitialized*
          public string $desc =>
          string(33) "There is already a setting stored"
          public $value =>
          NULL
        }
        [2] =>
        class Nadybot\Core\Annotations\ApiResult#4 (4) {
          public int $code =>
          int(415)
          public string $class =>
          *uninitialized*
          public string $desc =>
          string(48) "You tried to pass more than just a simple string"
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\RequestBody' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\RequestBody#388 (4) {
          public string $class =>
          string(6) "string"
          public string $desc =>
          string(26) "The data you want to store"
          public bool $required =>
          bool(true)
          public $value =>
          NULL
        }
      }
    }
  }
  public $name =>
  string(22) "apiSettingPostEndpoint"
  public $class =>
  string(44) "Nadybot\Core\Modules\PREFERENCES\Preferences"
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Nadybot\Core\Annotations\ApiResult#114 (4) {
  public int $code =>
  int(204)
  public string $class =>
  *uninitialized*
  public string $desc =>
  string(39) "The new setting was stored successfully"
  public $value =>
  NULL
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Addendum\ReflectionAnnotatedMethod#393 (3) {
  private $annotations =>
  class Addendum\AnnotationsCollection#205 (1) {
    private $annotations =>
    array(5) {
      'Nadybot\Core\Annotations\Api' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\Api#172 (1) {
          public $value =>
          string(11) "/setting/%s"
        }
      }
      'Nadybot\Core\Annotations\PUT' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\PUT#25 (1) {
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\AccessLevel' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\AccessLevel#330 (1) {
          public $value =>
          string(3) "all"
        }
      }
      'Nadybot\Core\Annotations\ApiResult' =>
      array(2) {
        [0] =>
        class Nadybot\Core\Annotations\ApiResult#114 (4) {
          public int $code =>
          int(204)
          public string $class =>
          *uninitialized*
          public string $desc =>
          string(39) "The new setting was stored successfully"
          public $value =>
          NULL
        }
        [1] =>
        class Nadybot\Core\Annotations\ApiResult#340 (4) {
          public int $code =>
          int(415)
          public string $class =>
          *uninitialized*
          public string $desc =>
          string(48) "You tried to pass more than just a simple string"
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\RequestBody' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\RequestBody#264 (4) {
          public string $class =>
          string(6) "string"
          public string $desc =>
          string(26) "The data you want to store"
          public bool $required =>
          bool(true)
          public $value =>
          NULL
        }
      }
    }
  }
  public $name =>
  string(21) "apiSettingPutEndpoint"
  public $class =>
  string(44) "Nadybot\Core\Modules\PREFERENCES\Preferences"
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Nadybot\Core\Annotations\ApiResult#340 (4) {
  public int $code =>
  int(415)
  public string $class =>
  *uninitialized*
  public string $desc =>
  string(48) "You tried to pass more than just a simple string"
  public $value =>
  NULL
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Addendum\ReflectionAnnotatedMethod#393 (3) {
  private $annotations =>
  class Addendum\AnnotationsCollection#205 (1) {
    private $annotations =>
    array(5) {
      'Nadybot\Core\Annotations\Api' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\Api#172 (1) {
          public $value =>
          string(11) "/setting/%s"
        }
      }
      'Nadybot\Core\Annotations\PUT' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\PUT#25 (1) {
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\AccessLevel' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\AccessLevel#330 (1) {
          public $value =>
          string(3) "all"
        }
      }
      'Nadybot\Core\Annotations\ApiResult' =>
      array(2) {
        [0] =>
        class Nadybot\Core\Annotations\ApiResult#114 (4) {
          public int $code =>
          int(204)
          public string $class =>
          *uninitialized*
          public string $desc =>
          string(39) "The new setting was stored successfully"
          public $value =>
          NULL
        }
        [1] =>
        class Nadybot\Core\Annotations\ApiResult#340 (4) {
          public int $code =>
          int(415)
          public string $class =>
          *uninitialized*
          public string $desc =>
          string(48) "You tried to pass more than just a simple string"
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\RequestBody' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\RequestBody#264 (4) {
          public string $class =>
          string(6) "string"
          public string $desc =>
          string(26) "The data you want to store"
          public bool $required =>
          bool(true)
          public $value =>
          NULL
        }
      }
    }
  }
  public $name =>
  string(21) "apiSettingPutEndpoint"
  public $class =>
  string(44) "Nadybot\Core\Modules\PREFERENCES\Preferences"
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Nadybot\Core\Annotations\ApiResult#203 (4) {
  public int $code =>
  int(204)
  public string $class =>
  *uninitialized*
  public string $desc =>
  string(40) "The new setting was deleted successfully"
  public $value =>
  NULL
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Addendum\ReflectionAnnotatedMethod#51 (3) {
  private $annotations =>
  class Addendum\AnnotationsCollection#348 (1) {
    private $annotations =>
    array(4) {
      'Nadybot\Core\Annotations\Api' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\Api#277 (1) {
          public $value =>
          string(11) "/setting/%s"
        }
      }
      'Nadybot\Core\Annotations\DELETE' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\DELETE#171 (1) {
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\AccessLevel' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\AccessLevel#346 (1) {
          public $value =>
          string(3) "all"
        }
      }
      'Nadybot\Core\Annotations\ApiResult' =>
      array(2) {
        [0] =>
        class Nadybot\Core\Annotations\ApiResult#203 (4) {
          public int $code =>
          int(204)
          public string $class =>
          *uninitialized*
          public string $desc =>
          string(40) "The new setting was deleted successfully"
          public $value =>
          NULL
        }
        [1] =>
        class Nadybot\Core\Annotations\ApiResult#232 (4) {
          public int $code =>
          int(409)
          public string $class =>
          *uninitialized*
          public string $desc =>
          string(29) "No setting found for that key"
          public $value =>
          NULL
        }
      }
    }
  }
  public $name =>
  string(24) "apiSettingDeleteEndpoint"
  public $class =>
  string(44) "Nadybot\Core\Modules\PREFERENCES\Preferences"
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Nadybot\Core\Annotations\ApiResult#232 (4) {
  public int $code =>
  int(409)
  public string $class =>
  *uninitialized*
  public string $desc =>
  string(29) "No setting found for that key"
  public $value =>
  NULL
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Addendum\ReflectionAnnotatedMethod#51 (3) {
  private $annotations =>
  class Addendum\AnnotationsCollection#348 (1) {
    private $annotations =>
    array(4) {
      'Nadybot\Core\Annotations\Api' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\Api#277 (1) {
          public $value =>
          string(11) "/setting/%s"
        }
      }
      'Nadybot\Core\Annotations\DELETE' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\DELETE#171 (1) {
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\AccessLevel' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\AccessLevel#346 (1) {
          public $value =>
          string(3) "all"
        }
      }
      'Nadybot\Core\Annotations\ApiResult' =>
      array(2) {
        [0] =>
        class Nadybot\Core\Annotations\ApiResult#203 (4) {
          public int $code =>
          int(204)
          public string $class =>
          *uninitialized*
          public string $desc =>
          string(40) "The new setting was deleted successfully"
          public $value =>
          NULL
        }
        [1] =>
        class Nadybot\Core\Annotations\ApiResult#232 (4) {
          public int $code =>
          int(409)
          public string $class =>
          *uninitialized*
          public string $desc =>
          string(29) "No setting found for that key"
          public $value =>
          NULL
        }
      }
    }
  }
  public $name =>
  string(24) "apiSettingDeleteEndpoint"
  public $class =>
  string(44) "Nadybot\Core\Modules\PREFERENCES\Preferences"
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Nadybot\Core\Annotations\ApiResult#77 (4) {
  public int $code =>
  int(200)
  public string $class =>
  string(17) "SystemInformation"
  public string $desc =>
  string(29) "Some basic system information"
  public $value =>
  NULL
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Addendum\ReflectionAnnotatedMethod#188 (3) {
  private $annotations =>
  class Addendum\AnnotationsCollection#139 (1) {
    private $annotations =>
    array(4) {
      'Nadybot\Core\Annotations\Api' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\Api#365 (1) {
          public $value =>
          string(8) "/sysinfo"
        }
      }
      'Nadybot\Core\Annotations\GET' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\GET#381 (1) {
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\AccessLevel' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\AccessLevel#113 (1) {
          public $value =>
          string(3) "all"
        }
      }
      'Nadybot\Core\Annotations\ApiResult' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\ApiResult#77 (4) {
          public int $code =>
          int(200)
          public string $class =>
          string(17) "SystemInformation"
          public string $desc =>
          string(29) "Some basic system information"
          public $value =>
          NULL
        }
      }
    }
  }
  public $name =>
  string(21) "apiSysinfoGetEndpoint"
  public $class =>
  string(44) "Nadybot\Core\Modules\SYSTEM\SystemController"
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Nadybot\Core\Annotations\ApiResult#327 (4) {
  public int $code =>
  int(200)
  public string $class =>
  string(13) "OnlinePlayers"
  public string $desc =>
  string(24) "A list of online players"
  public $value =>
  NULL
}
/home/mark/bot/Nadybot/src/Api/ApiSpecGenerator.php:370:
class Addendum\ReflectionAnnotatedMethod#220 (3) {
  private $annotations =>
  class Addendum\AnnotationsCollection#271 (1) {
    private $annotations =>
    array(4) {
      'Nadybot\Core\Annotations\Api' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\Api#367 (1) {
          public $value =>
          string(7) "/online"
        }
      }
      'Nadybot\Core\Annotations\GET' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\GET#159 (1) {
          public $value =>
          NULL
        }
      }
      'Nadybot\Core\Annotations\AccessLevelFrom' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\AccessLevelFrom#195 (1) {
          public $value =>
          string(6) "online"
        }
      }
      'Nadybot\Core\Annotations\ApiResult' =>
      array(1) {
        [0] =>
        class Nadybot\Core\Annotations\ApiResult#327 (4) {
          public int $code =>
          int(200)
          public string $class =>
          string(13) "OnlinePlayers"
          public string $desc =>
          string(24) "A list of online players"
          public $value =>
          NULL
        }
      }
    }
  }
  public $name =>
  string(17) "apiOnlineEndpoint"
  public $class =>
  string(46) "Nadybot\Modules\ONLINE_MODULE\OnlineController"
}
{
	"openapi": "3.0.0",
	"info": {
		"title": "Nadybot API",
		"description": "This API provides access to Nadybot function in a REST API",
		"license": {
			"name": "GPL3",
			"url": "https://www.gnu.org/licenses/gpl-3.0.en.html"
		},
		"version": "5.0"
	},
	"servers": [
		{
			"url": "/api"
		}
	],
	"components": {
		"schemas": {
			"ConfigModule": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"description": "Name of the module"
					},
					"num_commands_enabled": {
						"type": "integer",
						"description": "How many commands are enabled"
					},
					"num_commands_disabled": {
						"type": "integer",
						"description": "How many commands are disabled"
					},
					"num_events_enabled": {
						"type": "integer",
						"description": "How many events are enabled"
					},
					"num_events_disabled": {
						"type": "integer",
						"description": "How many events are disabled"
					},
					"num_settings": {
						"type": "integer",
						"description": "How many settings are there?"
					}
				}
			},
			"ModuleSubcommandChannel": {
				"type": "object",
				"properties": {
					"access_level": {
						"type": "string",
						"description": "The access level you need to have in order to be allowed to use this command in this channel"
					},
					"enabled": {
						"type": "boolean",
						"description": "Can this command be used in this channel?"
					}
				}
			},
			"ModuleSubcommand": {
				"type": "object",
				"properties": {
					"command": {
						"type": "string",
						"description": "The string or regexp that has to match this command"
					},
					"type": {
						"type": "string",
						"description": "Either \"cmd\" or \"subcmd\""
					},
					"description": {
						"type": "string",
						"description": "A short description of the command"
					},
					"msg": {
						"$ref": "#/components/schemas/ModuleSubcommandChannel",
						"nullable": true,
						"description": "Settings for tells"
					},
					"priv": {
						"$ref": "#/components/schemas/ModuleSubcommandChannel",
						"nullable": true,
						"description": "Settings for private channel"
					},
					"org": {
						"$ref": "#/components/schemas/ModuleSubcommandChannel",
						"nullable": true,
						"description": "Settings for org channel"
					}
				}
			},
			"ModuleCommand": {
				"allOf": [
					{
						"$ref": "#/components/schemas/ModuleSubcommand"
					},
					{
						"type": "object",
						"properties": {
							"subcommands": {
								"type": "array",
								"description": "A list of subcommands for this command. Subcommands can have different rights, but cannot be enabled without the command itself being enabled. *",
								"items": {
									"$ref": "#/components/schemas/ModuleSubcommand"
								}
							}
						}
					}
				]
			},
			"Operation": {
				"type": "object",
				"properties": {
					"op": {
						"type": "string",
						"description": "The operation to perform"
					}
				}
			},
			"SettingOption": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"description": "Name of this option for displaying"
					},
					"value": {
						"oneOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							}
						],
						"nullable": true,
						"description": "Which value does this option represent?"
					}
				}
			},
			"ModuleSetting": {
				"type": "object",
				"properties": {
					"type": {
						"type": "string",
						"description": "The type of this setting (bool, number, options, etc)"
					},
					"name": {
						"type": "string",
						"description": "The name of the setting"
					},
					"value": {
						"oneOf": [
							{
								"type": "integer"
							},
							{
								"type": "string"
							},
							{
								"type": "boolean"
							}
						],
						"nullable": true,
						"description": "The current value"
					},
					"options": {
						"type": "array",
						"description": "A list of predefined options to pick from",
						"items": {
							"$ref": "#/components/schemas/SettingOption"
						}
					},
					"editable": {
						"type": "boolean",
						"description": "Is this a fixed setting (like database version) or can it be changed?"
					},
					"description": {
						"type": "string",
						"description": "A description of what this setting is for"
					}
				}
			},
			"ModuleEventConfig": {
				"type": "object",
				"properties": {
					"event": {
						"type": "string",
						"description": "The event for this module"
					},
					"description": {
						"type": "string",
						"description": "What is supposed to happed when this event occurs?"
					},
					"enabled": {
						"type": "boolean",
						"description": "Is the event handler turned on?"
					}
				}
			},
			"ModuleAccessLevel": {
				"allOf": [
					{
						"$ref": "#/components/schemas/SettingOption"
					},
					{
						"type": "object",
						"properties": {
							"numeric_value": {
								"type": "integer",
								"description": "Higher value means fewer rights. Use this to sort on"
							},
							"enabled": {
								"type": "boolean",
								"description": "Some ranks only work if a module is enabled"
							}
						}
					}
				]
			},
			"BasicSystemInformation": {
				"type": "object",
				"properties": {
					"bot_name": {
						"type": "string",
						"description": "Name of the bot character in AO"
					},
					"superadmin": {
						"type": "string",
						"nullable": true,
						"description": "Name of the character running the bot, null if not set"
					},
					"org": {
						"type": "string",
						"nullable": true,
						"description": "Name of the org this bot is in or null if not in an org"
					},
					"org_id": {
						"type": "integer",
						"nullable": true,
						"description": "ID of the org this bot is in or null if not in an org"
					},
					"bot_version": {
						"type": "string",
						"description": "Which Nadybot version are we running?"
					},
					"php_version": {
						"type": "string",
						"description": "Which PHP version are we running?"
					},
					"os": {
						"type": "string",
						"description": "Which operating system/kernel are we running?"
					},
					"db_type": {
						"type": "string",
						"description": "Which database type (mysql/sqlite) are we using?"
					}
				}
			},
			"MemoryInformation": {
				"type": "object",
				"properties": {
					"current_usage": {
						"type": "integer",
						"description": "Current memory usage in bytes"
					},
					"current_usage_real": {
						"type": "integer",
						"description": "Current memory usage in bytes including allocated system pages"
					},
					"peak_usage": {
						"type": "integer",
						"description": "Peak memory usage in bytes"
					},
					"peak_usage_real": {
						"type": "integer",
						"description": "Peak memory usage in bytes including allocated system pages"
					}
				}
			},
			"MiscSystemInformation": {
				"type": "object",
				"properties": {
					"using_chat_proxy": {
						"type": "boolean",
						"description": "Is the bot using a chat proxy for mass messages or more than 1000 friends"
					},
					"uptime": {
						"type": "integer",
						"description": "Number of seconds since the bot was started"
					}
				}
			},
			"ConfigStatistics": {
				"type": "object",
				"properties": {
					"active_tell_commands": {
						"type": "integer",
						"description": "Number of commands activated for use with /tell"
					},
					"active_priv_commands": {
						"type": "integer",
						"description": "Number of commands activated for use in the private channel"
					},
					"active_org_commands": {
						"type": "integer",
						"description": "Number of commands activated for use in the org channel"
					},
					"active_subcommands": {
						"type": "integer",
						"description": "Number of subcommands activated"
					},
					"active_aliases": {
						"type": "integer",
						"description": "Number of aliases"
					},
					"active_events": {
						"type": "integer",
						"description": "Number of currently active events"
					},
					"active_help_commands": {
						"type": "integer",
						"description": "Number of active help texts for commands"
					}
				}
			},
			"SystemStats": {
				"type": "object",
				"properties": {
					"buddy_list_size": {
						"type": "integer",
						"description": "How many characters are currently on the friendlist"
					},
					"max_buddy_list_size": {
						"type": "integer",
						"description": "Maximum allowed characters for the friendlist"
					},
					"priv_channel_size": {
						"type": "integer",
						"description": "How many people are currently on the bot's private channel"
					},
					"org_size": {
						"type": "integer",
						"description": "How many people are in the bot's org? 0 if not in an org"
					},
					"charinfo_cache_size": {
						"type": "integer",
						"description": "How many character infos are currently cached?"
					},
					"chatqueue_length": {
						"type": "integer",
						"description": "How many messages are waiting to be sent?"
					}
				}
			},
			"ChannelInfo": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"description": "The name of the public channel"
					},
					"id": {
						"type": "integer",
						"description": "The ID the game uses for this channel"
					}
				}
			},
			"SystemInformation": {
				"type": "object",
				"properties": {
					"basic": {
						"$ref": "#/components/schemas/BasicSystemInformation",
						"description": "Basic information like OS"
					},
					"memory": {
						"$ref": "#/components/schemas/MemoryInformation",
						"description": "Memory statistics"
					},
					"misc": {
						"$ref": "#/components/schemas/MiscSystemInformation",
						"description": "Information not fitting any other category"
					},
					"config": {
						"$ref": "#/components/schemas/ConfigStatistics",
						"description": "Statistics about some configurations"
					},
					"stats": {
						"$ref": "#/components/schemas/SystemStats",
						"description": "General bot statistics"
					},
					"channels": {
						"type": "array",
						"description": "Which channels is the bot listening to",
						"items": {
							"$ref": "#/components/schemas/ChannelInfo"
						}
					}
				}
			},
			"Player": {
				"type": "object",
				"properties": {
					"charid": {
						"type": "integer",
						"description": "The character ID as used by Anarchy Online"
					},
					"first_name": {
						"type": "string",
						"description": "The character's first name (the name before $name)"
					},
					"name": {
						"type": "string",
						"description": "The character's name as it appears in the game"
					},
					"last_name": {
						"type": "string",
						"description": "The character's last name (the name after $name)"
					},
					"level": {
						"type": "integer",
						"nullable": true,
						"description": "What level (1-220) is the characer or null if unknown"
					},
					"breed": {
						"type": "string",
						"description": "Any of Nano, Solitus, Atrox or Opifex. Also empty string if unknown"
					},
					"gender": {
						"type": "string",
						"description": "Male, Female, Neuter or an empty string if unknown"
					},
					"faction": {
						"type": "string",
						"description": "Omni, Clan, Neutral or an empty string if unknown"
					},
					"profession": {
						"type": "string",
						"nullable": true,
						"description": "The long profession name (e.g. \"Enforcer\", not \"enf\" or \"enfo\") or an empty string if unknown"
					},
					"prof_title": {
						"type": "string",
						"description": "The title-level title for the profession of this player For example \"The man\", \"Don\" or empty if unknown."
					},
					"ai_rank": {
						"type": "string",
						"description": "The name of the ai_level as a rank or empty string if unknown"
					},
					"ai_level": {
						"type": "integer",
						"nullable": true,
						"description": "AI level of this player or null if unknown"
					},
					"org_id": {
						"type": "integer",
						"nullable": true,
						"description": "The id of the org this player is in or null if none or unknown"
					},
					"org": {
						"type": "string",
						"nullable": true,
						"description": "The name of the org this player is in or null if none/unknown"
					},
					"org_rank": {
						"type": "string",
						"nullable": true,
						"description": "The name of the rank the player has in their org (Veteran, Apprentice) or null if not in an org or unknown"
					},
					"org_rank_id": {
						"type": "integer",
						"nullable": true,
						"description": "The numeric rank of the player in their org or null if not in an org/unknown"
					},
					"dimension": {
						"type": "integer",
						"nullable": true,
						"description": "In which dimension (RK server) is this character? 4 for test, 5 for RK5, 6 for RK19"
					},
					"head_id": {
						"type": "integer",
						"nullable": true,
						"description": "Which head is the player using"
					},
					"pvp_rating": {
						"type": "integer",
						"nullable": true,
						"description": "Numeric PvP-rating of the player (1-7) or null if unknown"
					},
					"pvp_title": {
						"type": "string",
						"nullable": true,
						"description": "Name of the player's PvP title derived from their $pvp_rating or null if unknown"
					},
					"last_update": {
						"type": "integer",
						"nullable": true,
						"description": "Unix timestamp of the last update of these data"
					}
				},
				"description": "This represents the data the bot stores about a player in the cache and database"
			},
			"OnlinePlayer": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Player"
					},
					{
						"type": "object",
						"properties": {
							"afk_message": {
								"type": "string",
								"description": "The AFK message of the player or an empty string"
							},
							"main_character": {
								"type": "string",
								"description": "The name of the main character, or the same as $name if this is the main character of the player"
							},
							"online": {
								"type": "boolean",
								"description": "True if this player is currently online, false otherwise"
							}
						},
						"description": "This represents a single player in the online list"
					}
				]
			},
			"OnlinePlayers": {
				"type": "object",
				"properties": {
					"org": {
						"type": "array",
						"description": "All players online in the org",
						"items": {
							"$ref": "#/components/schemas/OnlinePlayer"
						}
					},
					"private_channel": {
						"type": "array",
						"description": "All players online in the private channel",
						"items": {
							"$ref": "#/components/schemas/OnlinePlayer"
						}
					}
				},
				"description": "This is the list of all players considered to be online by the bot"
			}
		},
		"securitySchemes": {
			"basicAuth": {
				"type": "http",
				"scheme": "basic"
			}
		}
	},
	"paths": {
		"/module": {
			"parameters": [],
			"get": {
				"security": [
					{
						"basicAuth": []
					}
				],
				"description": "Get a list of available modules to configure",
				"responses": {
					"200": {
						"description": "A list of modules to configure",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/ConfigModule"
									}
								}
							}
						}
					}
				}
			}
		},
		"/module/{module}/commands/{command}/{channel}": {
			"parameters": [
				{
					"name": "module",
					"required": true,
					"in": "path",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "command",
					"required": true,
					"in": "path",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "channel",
					"required": true,
					"in": "path",
					"schema": {
						"type": "string"
					}
				}
			],
			"patch": {
				"security": [
					{
						"basicAuth": []
					}
				],
				"description": "Activate or deactivate a Command",
				"responses": {
					"200": {
						"description": "operation applied successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ModuleCommand"
								}
							}
						}
					},
					"402": {
						"description": "Wrong or no operation given"
					}
				},
				"requestBody": {
					"description": "Parameters to change",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ModuleSubcommandChannel"
							}
						}
					}
				}
			}
		},
		"/module/{module}/commands/{command}": {
			"parameters": [
				{
					"name": "module",
					"required": true,
					"in": "path",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "command",
					"required": true,
					"in": "path",
					"schema": {
						"type": "string"
					}
				}
			],
			"patch": {
				"security": [
					{
						"basicAuth": []
					}
				],
				"description": "Activate or deactivate a command",
				"responses": {
					"200": {
						"description": "operation applied successfully"
					},
					"402": {
						"description": "Wrong or no operation given"
					}
				},
				"requestBody": {
					"description": "Either \"enable\" or \"disable\"",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Operation"
							}
						}
					}
				}
			},
			"put": {
				"security": [
					{
						"basicAuth": []
					}
				],
				"description": "Activate or deactivate a command",
				"responses": {
					"200": {
						"description": "operation applied successfully"
					},
					"402": {
						"description": "Wrong or no operation given"
					}
				},
				"requestBody": {
					"description": "Either \"enable\" or \"disable\"",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Operation"
							}
						}
					}
				}
			}
		},
		"/module/{module}": {
			"parameters": [
				{
					"name": "module",
					"required": true,
					"in": "path",
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "channel",
					"required": false,
					"in": "query",
					"schema": {
						"type": "string"
					},
					"description": "Either \"msg\", \"priv\", \"guild\" or \"all\""
				}
			],
			"patch": {
				"security": [
					{
						"basicAuth": []
					}
				],
				"description": "Activate or deactivate a module",
				"responses": {
					"200": {
						"description": "operation applied successfully"
					},
					"402": {
						"description": "Wrong or no operation given"
					}
				},
				"requestBody": {
					"description": "Either \"enable\" or \"disable\"",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Operation"
							}
						}
					}
				}
			},
			"put": {
				"security": [
					{
						"basicAuth": []
					}
				],
				"description": "Activate or deactivate a module",
				"responses": {
					"200": {
						"description": "operation applied successfully"
					},
					"402": {
						"description": "Wrong or no operation given"
					}
				},
				"requestBody": {
					"description": "Either \"enable\" or \"disable\"",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Operation"
							}
						}
					}
				}
			}
		},
		"/module/{module}/settings": {
			"parameters": [
				{
					"name": "module",
					"required": true,
					"in": "path",
					"schema": {
						"type": "string"
					}
				}
			],
			"get": {
				"security": [
					{
						"basicAuth": []
					}
				],
				"description": "Get a list of available settings for a module",
				"responses": {
					"200": {
						"description": "A list of all settings for this module",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/ModuleSetting"
									}
								}
							}
						}
					}
				}
			}
		},
		"/module/{module}/events": {
			"parameters": [
				{
					"name": "module",
					"required": true,
					"in": "path",
					"schema": {
						"type": "string"
					}
				}
			],
			"get": {
				"security": [
					{
						"basicAuth": []
					}
				],
				"description": "Get a list of available events for a module",
				"responses": {
					"200": {
						"description": "A list of all events and their status for this module",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/ModuleEventConfig"
									}
								}
							}
						}
					}
				}
			}
		},
		"/module/{module}/commands": {
			"parameters": [
				{
					"name": "module",
					"required": true,
					"in": "path",
					"schema": {
						"type": "string"
					}
				}
			],
			"get": {
				"security": [
					{
						"basicAuth": []
					}
				],
				"description": "Get a list of available commands for a module",
				"responses": {
					"200": {
						"description": "A list of all command and possible subcommands this module provides",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/ModuleCommand"
									}
								}
							}
						}
					}
				}
			}
		},
		"/access_levels": {
			"parameters": [],
			"get": {
				"security": [
					{
						"basicAuth": []
					}
				],
				"description": "Get a list of available events for a module",
				"responses": {
					"200": {
						"description": "A list of all access levels",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/ModuleAccessLevel"
									}
								}
							}
						}
					}
				}
			}
		},
		"/setting/{key}": {
			"parameters": [
				{
					"name": "key",
					"required": true,
					"in": "path",
					"schema": {
						"type": "string"
					}
				}
			],
			"get": {
				"security": [
					{
						"basicAuth": []
					}
				],
				"description": "Get the value of a setting",
				"responses": {
					"200": {
						"description": "The stored value",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"204": {
						"description": "No value stored"
					}
				}
			},
			"post": {
				"security": [
					{
						"basicAuth": []
					}
				],
				"description": "Create a new setting",
				"responses": {
					"201": {
						"description": "The new setting was stored successfully"
					},
					"409": {
						"description": "There is already a setting stored"
					},
					"415": {
						"description": "You tried to pass more than just a simple string"
					}
				},
				"requestBody": {
					"description": "The data you want to store",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "string"
							}
						}
					}
				}
			},
			"put": {
				"security": [
					{
						"basicAuth": []
					}
				],
				"description": "Store a setting",
				"responses": {
					"204": {
						"description": "The new setting was stored successfully"
					},
					"415": {
						"description": "You tried to pass more than just a simple string"
					}
				},
				"requestBody": {
					"description": "The data you want to store",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "string"
							}
						}
					}
				}
			},
			"delete": {
				"security": [
					{
						"basicAuth": []
					}
				],
				"description": "Delete a setting",
				"responses": {
					"204": {
						"description": "The new setting was deleted successfully"
					},
					"409": {
						"description": "No setting found for that key"
					}
				}
			}
		},
		"/sysinfo": {
			"parameters": [],
			"get": {
				"security": [
					{
						"basicAuth": []
					}
				],
				"description": "Get system information",
				"responses": {
					"200": {
						"description": "Some basic system information",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SystemInformation"
								}
							}
						}
					}
				}
			}
		},
		"/online": {
			"parameters": [],
			"get": {
				"security": [
					{
						"basicAuth": []
					}
				],
				"description": "Get a list of all people online in all linked channels",
				"responses": {
					"200": {
						"description": "A list of online players",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/OnlinePlayers"
								}
							}
						}
					}
				}
			}
		}
	}
}