name: Test migrations
on: [push]

jobs:
  sqlite_tests:
    name: Test SQLite migrations
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        php: [8.0, 8.1, 8.2]
        from: [null, budabot4.db, nadybot5.0.0.db]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: none
          extensions: sqlite3, sockets, pdo_sqlite, pdo_mysql, openssl, fileinfo

      - name: Install dependencies
        run: composer install -q --no-dev

      - name: Migrate SQLite
        shell: bash
        run: |
          curl -s -S -q --user "github:${{ secrets.CONFIG_PASSWORD }}" "https://confs.nadybot.org/sqlite.php" -o conf/config.php
          if [ "${{ matrix.from }}" != "" ]; then
            curl -s -S -q --user "github:${{ secrets.CONFIG_PASSWORD }}" "https://confs.nadybot.org/${{ matrix.from }}" -o data/nadybot.db
          else
            rm -f data/nadybot.db
          fi
          php main.php --strict --setup-only --migration-errors-fatal conf/config.php

  mysql_tests:
    name: Test MySQL migrations
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: 123456
          MYSQL_USER: budabot
          MYSQL_DATABASE: budabot
          MYSQL_PASSWORD: '123456'
        options: >-
          --health-cmd "mysqladmin ping -h localhost"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 3306:3306
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        php: [8.0, 8.1]
        from: [null, budabot4.mysql, nadybot5.0.0.mysql]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: none
          extensions: sqlite3, sockets, pdo_sqlite, pdo_mysql

      - name: Install dependencies
        run: composer install -q --no-dev

      - name: Migrate MySQL
        shell: bash
        run: |
          curl -s -S -q --user "github:${{ secrets.CONFIG_PASSWORD }}" "https://confs.nadybot.org/mysql.php" -o conf/config.php
          if [ "${{ matrix.from }}" != "" ]; then
            curl -s -S -q --user "github:${{ secrets.CONFIG_PASSWORD }}" "https://confs.nadybot.org/${{ matrix.from }}" -o data/nadybot.sql
            mysql -h 127.0.0.1 -u budabot -p123456 budabot < data/nadybot.sql
            rm -f data/nadybot.sql
          fi
          php main.php --strict --setup-only --migration-errors-fatal conf/config.php

  mariadb_tests:
    name: Test MariaDB migrations
    services:
      mysql:
        image: mariadb:10.5
        env:
          MYSQL_ROOT_PASSWORD: 123456
          MYSQL_USER: budabot
          MYSQL_DATABASE: budabot
          MYSQL_PASSWORD: '123456'
        options: >-
          --health-cmd "mysqladmin ping -h localhost"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 3306:3306
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        php: [8.0, 8.1]
        from: [null, budabot4.mysql, hodorraid.mysql, nadybot5.0.0.mysql]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: none
          extensions: sqlite3, sockets, pdo_sqlite, pdo_mysql

      - name: Install dependencies
        run: composer install -q --no-dev

      - name: Migrate MySQL
        shell: bash
        run: |
          curl -s -S -q --user "github:${{ secrets.CONFIG_PASSWORD }}" "https://confs.nadybot.org/mysql.php" -o conf/config.php
          if [ "${{ matrix.from }}" != "" ]; then
            curl -s -S -q --user "github:${{ secrets.CONFIG_PASSWORD }}" "https://confs.nadybot.org/${{ matrix.from }}" -o data/nadybot.sql
            mysql -h 127.0.0.1 -u budabot -p123456 budabot < data/nadybot.sql
            rm -f data/nadybot.sql
          fi
          php main.php --strict --setup-only --migration-errors-fatal conf/config.php

  pgsql_tests:
    name: Test PostgreSQL migrations
    services:
      postgres:
        image: postgres:9
        env:
          POSTGRES_PASSWORD: 123456
          POSTGRES_USER: budabot
          POSTGRES_DB: budabot
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        php: [8.0, 8.1]
        from: [null, nadybot5.1.0.pgsql]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: none
          extensions: sqlite3, sockets, pdo_sqlite, pdo_mysql

      - name: Install dependencies
        run: composer install -q --no-dev

      - name: Migrate PostgreSQL
        shell: bash
        run: |
          curl -s -S -q --user "github:${{ secrets.CONFIG_PASSWORD }}" "https://confs.nadybot.org/postgresql.php" -o conf/config.php
          if [ "${{ matrix.from }}" != "" ]; then
            curl -s -S -q --user "github:${{ secrets.CONFIG_PASSWORD }}" "https://confs.nadybot.org/${{ matrix.from }}" -o data/nadybot.sql
            echo "127.0.0.1:5432:budabot:budabot:123456" > ~/.pgpass
            chmod 0600 ~/.pgpass
            psql -o /dev/null -h 127.0.0.1 -U budabot budabot < data/nadybot.sql
            rm -f data/nadybot.sql
          fi
          php main.php --strict --setup-only --migration-errors-fatal conf/config.php
